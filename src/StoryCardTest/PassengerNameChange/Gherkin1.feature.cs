// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace StoryCardTest.PassengerNameChange
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("")]
    public partial class Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Gherkin1.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Given I have made a booking")]
        [NUnit.Framework.TestCaseAttribute("Steve", "Steven", "Jackson", "Jackson", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Giörgos", "George", "De-metrios", "Demetrios", "* Greek name", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Josephine", "Jozåfina", "Cooper", "Cooper", "* Polish name", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Hariss", "Harrëson", "Owen", "Owen", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Chris", "Christopher", "Bridges", "Bridges", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Matt", "Matthew", "Jones", "Jones", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Steve", "Steïve", "Jackson", "Jack", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Dave", "Dave", "Peterson", "Pete", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("John-Paul", "Jöhn-paul", "hamilton", "Hamilton-Bradshaw", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Andy", "Andy", "Marek", "Mark", "* Polish name", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Chris", "Chris", "Theödoros", "Theo", "* Greek name", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Matt", "Matthew", "JONes", "Jones-cambells", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Steve", "Stèvie", "Gold", "Goldsmith", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Dave", "Daved", "Peterson", "Pete", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Rafal", "Rafael", "Stefan", "Szczepan", "* Polish name", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Demi", "Dèmetrios", "Theo", "Theödoros", "* Greek name", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Chris", "Christopher", "Bridges", "Bridgeswater", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Christian", "Chrïs", "Jönes", "Jones-cambells", "", new string[0])]
        public virtual void GivenIHaveMadeABooking(string firstName, string newFirstName, string secondName, string newSecondName, string , string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Given I have made a booking", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
testRunner.When(string.Format("I change my < Firstname> to {0}", newFirstName));
#line 6
testRunner.And(string.Format("my <Secondname> to {0}", newSecondName));
#line 7
testRunner.Then("I am not charged a Name change Fee");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
